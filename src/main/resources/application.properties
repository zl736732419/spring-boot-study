# 重新加载时取消日志记录
spring.devtools.restart.log-condition-evaluation-delta=false
# 忽略指定目录内容修改导致系统重启,默认情况下
# /META-INF/maven, /META-INF/resources, /resources, /static, /public, /templates
# 内容修改不会导致系统重新加载
#spring.devtools.restart.exclude=static/**,public/**
# 配置classpath之外的目录内容修改，系统需要重新加载
spring.devtools.restart.additional-paths=outclasspath
# 禁用重新加载设置为false
spring.devtools.restart.enabled=true
# 只有trigger file修改才会导致重新加载,修改其他文件不会引起重新加载,该配置文件对应的默认路径是classpath
#spring.devtools.restart.trigger-file=restart-trigger.txt
# 开启当spring boot重新加载后浏览器自动更新,这里需要浏览器安装livereload插件
spring.devtools.livereload.enabled=true
# 开启远程客户端，连接到远程的spring boot服务，主要是为了通过远程服务客户端将本地修改推到远程服务做更新
# 1. 远程spring boot服务需要设置spring-boot-maven-plugin启用devtools
# <configuration>
#   <excludeDevtools>false</excludeDevtools>
# </configuration>
# 2. 需要设置远程服务连接认证密码spring.devtools.remote.secret
# 客户端在连接到远程服务时会采用当前配置的密码进行认证
spring.devtools.remote.secret=123456

# 定制文本banner
# 1. 直接在classpath添加banner.txt
# 2. 通过spring.banner.location指定banner路径
#spring.banner.location=classpath:banners/banner.txt
#spring.banner.location=file:C:\\Users\\Administrator\\Desktop\\banner.txt
# 通过/和classpath:前缀是等效的，都是从classpath目录中查找
#spring.banner.location=/banners/banner-with-color.txt
#spring.banner.charset=UTF-8

# 定制图片banner
# 图片最后会转化成ASCII的形式展现
# 1. 直接在classpath下添加banner.[gif,jpg,png]三种图片之一
# 2. 通过spring.banner.image.location设置路径
#spring.banner.image.location=file:C:\\Users\\Administrator\\Desktop\\20180227141621.jpg





# custem cofiguraiton definitions
name=zl
